name: NodeCRUD-CICD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      
    - name: Login to DockerHub
      uses : docker/login-action@v1
      with :
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build & Push
      id : docker_build
      uses : docker/build-push-action@v2
      with :
        push: true
        tags: gilangvperdana/apps:nodecrud1

    - name: Get branch name (merge)
      if: github.event_name != 'pull_request'
      shell: bash
      run: echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

    - name: Get branch name (pull request)
      if: github.event_name == 'pull_request'
      shell: bash
      run: echo "BRANCH=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

    - name: Send Slack Notification
      if: always()
      uses: edge/simple-slack-notify@master    
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      with:
        channel: '#cloud-infrastructure'
        status: ${{ job.status }}
        success_text: '${env.GITHUB_WORKFLOW} #${env.GITHUB_RUN_NUMBER} build completed successfully'
        failure_text: '${env.GITHUB_WORKFLOW} #${env.GITHUB_RUN_NUMBER} build failed'
        cancelled_text: '${env.GITHUB_WORKFLOW} #${env.GITHUB_RUN_NUMBER} build was cancelled'
        fields: |
          [{ "title": "Repository", "value": "${env.GITHUB_REPOSITORY}", "short": true },
          { "title": "Branch", "value": "${env.BRANCH}", "short": true },
          { "title": "Commit", "value": "${env.GITHUB_SHA_SHORT}", "short": true },
          { "title": "Action URL", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}"}]
